{"version":3,"sources":["../src/parse-command.js"],"names":["input","ret","strings","split","command","substr","length","options","shift","forEach","str","option","push","values","recentOption","value","parseFloat"],"mappings":";;;;;;AAAA;;kBAMe,UAACA,KAAD,EAAW;AACxB,MAAMC,MAAM,EAAZ;AACA,MAAMC,UAAUF,MAAMG,KAAN,CAAY,GAAZ,CAAhB;;AAEA,MAAI,sBAAUD,QAAQ,CAAR,CAAV,CAAJ,EAA2B;AACzBD,QAAIG,OAAJ,GAAcF,QAAQ,CAAR,EAAWG,MAAX,CAAkB,CAAlB,EAAqBH,QAAQ,CAAR,EAAWI,MAAhC,CAAd;AACAL,QAAIM,OAAJ,GAAc,EAAd;AACAL,YAAQM,KAAR;AACAN,YAAQO,OAAR,CAAgB,UAACC,GAAD,EAAS;AACvB,UAAI,qBAASA,GAAT,CAAJ,EAAmB;AACjB,YAAMC,SAASD,IAAIL,MAAJ,CAAW,CAAX,EAAcK,IAAIJ,MAAlB,CAAf;AACAL,YAAIM,OAAJ,CAAYK,IAAZ,CAAiB;AACfD,wBADe;AAEfE,kBAAQ;AAFO,SAAjB;AAID,OAND,MAMO;AACL,YAAMC,eAAeb,IAAIM,OAAJ,CAAYN,IAAIM,OAAJ,CAAYD,MAAZ,GAAqB,CAAjC,CAArB;AACA,YAAIS,QAAQL,GAAZ;AACA,YAAIM,WAAWN,GAAX,CAAJ,EAAqB;AACnB;AACAK,kBAAQC,WAAWN,GAAX,CAAR;AACD;AACDI,qBAAaD,MAAb,CAAoBD,IAApB,CAAyBG,KAAzB;AACD;AACF,KAhBD;AAiBA,WAAOd,GAAP;AACD;AACD;AACAA,MAAIG,OAAJ,GAAc,SAAd;AACAH,MAAIM,OAAJ,GAAc,CAAC;AACbI,YAAQ,KADK;AAEbE,YAAQ,CAACb,KAAD;AAFK,GAAD,CAAd;AAIA,SAAOC,GAAP;AACD,C","file":"parse-command.js","sourcesContent":["import {\n  isCommand,\n  isOption,\n} from './utils/index'\n\n\nexport default (input) => {\n  const ret = {}\n  const strings = input.split(' ')\n\n  if (isCommand(strings[0])) {\n    ret.command = strings[0].substr(1, strings[0].length)\n    ret.options = []\n    strings.shift()\n    strings.forEach((str) => {\n      if (isOption(str)) {\n        const option = str.substr(1, str.length)\n        ret.options.push({\n          option,\n          values: [],\n        })\n      } else {\n        const recentOption = ret.options[ret.options.length - 1]\n        let value = str\n        if (parseFloat(str)) {\n          // if it's a number, convert it\n          value = parseFloat(str)\n        }\n        recentOption.values.push(value)\n      }\n    })\n    return ret\n  }\n  // if not a command, send as a message\n  ret.command = 'message'\n  ret.options = [{\n    option: 'txt',\n    values: [input],\n  }]\n  return ret\n}\n"]}